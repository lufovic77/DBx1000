g++ -c -Wall -g -std=c++0x -I. -I./benchmarks -I./concurrency_control -I./storage -I./system  -lrt -lpthread -msse4.2 -march=native -ffast-math -Werror -O3 -D_GNU_SOURCE -fopenmp -D NOGRAPHITE=1 -Werror -O3 -o config.o config.cpp
g++ -c -Wall -g -std=c++0x -I. -I./benchmarks -I./concurrency_control -I./storage -I./system  -lrt -lpthread -msse4.2 -march=native -ffast-math -Werror -O3 -D_GNU_SOURCE -fopenmp -D NOGRAPHITE=1 -Werror -O3 -o benchmarks/test_txn.o benchmarks/test_txn.cpp
In file included from config.h:323:0,
                 from config.cpp:1:
config-assertions.h:12:15: error: 'USE_LOCKTABLE' was not declared in this scope
 MACRO_IF_THEN(USE_LOCKTABLE, LOG_ALGORITHM==LOG_TAURUS || LOG_ALGORITHM == LOG_NO || LOG_ALGORITHM == LOG_SERIAL || LOG_ALGORITHM == LOG_BATCH)
               ^
config-assertions.h:3:54: note: in definition of macro 'MACRO_ASSERT'
 #define MACRO_ASSERT(x) extern int __ma_dummy[((int)(x)!=0)-1];  // minor fix for clang, where "int a[0]" is permitted,
                                                      ^
config-assertions.h:12:1: note: in expansion of macro 'MACRO_IF_THEN'
 MACRO_IF_THEN(USE_LOCKTABLE, LOG_ALGORITHM==LOG_TAURUS || LOG_ALGORITHM == LOG_NO || LOG_ALGORITHM == LOG_SERIAL || LOG_ALGORITHM == LOG_BATCH)
 ^~~~~~~~~~~~~
config-assertions.h:16:60: error: 'USE_LOCKTABLE' was not declared in this scope
 MACRO_IF_THEN(LOG_ALGORITHM==LOG_SERIAL && CC_ALG == SILO, USE_LOCKTABLE==false)
                                                            ^
config-assertions.h:3:54: note: in definition of macro 'MACRO_ASSERT'
 #define MACRO_ASSERT(x) extern int __ma_dummy[((int)(x)!=0)-1];  // minor fix for clang, where "int a[0]" is permitted,
                                                      ^
config-assertions.h:16:1: note: in expansion of macro 'MACRO_IF_THEN'
 MACRO_IF_THEN(LOG_ALGORITHM==LOG_SERIAL && CC_ALG == SILO, USE_LOCKTABLE==false)
 ^~~~~~~~~~~~~
config-assertions.h:3:62: error: size of array '__ma_dummy' is negative
 #define MACRO_ASSERT(x) extern int __ma_dummy[((int)(x)!=0)-1];  // minor fix for clang, where "int a[0]" is permitted,
                                                              ^
config-assertions.h:5:29: note: in expansion of macro 'MACRO_ASSERT'
 #define MACRO_IF_THEN(a, b) MACRO_ASSERT((!(a))||(b))
                             ^~~~~~~~~~~~
config-assertions.h:29:1: note: in expansion of macro 'MACRO_IF_THEN'
 MACRO_IF_THEN(UPDATE_SIMD, LOG_ALGORITHM==LOG_TAURUS)
 ^~~~~~~~~~~~~
config-assertions.h:3:62: error: conflicting declaration 'int __ma_dummy [1]'
 #define MACRO_ASSERT(x) extern int __ma_dummy[((int)(x)!=0)-1];  // minor fix for clang, where "int a[0]" is permitted,
                                                              ^
config-assertions.h:5:29: note: in expansion of macro 'MACRO_ASSERT'
 #define MACRO_IF_THEN(a, b) MACRO_ASSERT((!(a))||(b))
                             ^~~~~~~~~~~~
config-assertions.h:29:1: note: in expansion of macro 'MACRO_IF_THEN'
 MACRO_IF_THEN(UPDATE_SIMD, LOG_ALGORITHM==LOG_TAURUS)
 ^~~~~~~~~~~~~
config-assertions.h:3:36: note: previous declaration as 'int __ma_dummy [0]'
 #define MACRO_ASSERT(x) extern int __ma_dummy[((int)(x)!=0)-1];  // minor fix for clang, where "int a[0]" is permitted,
                                    ^
config-assertions.h:5:29: note: in expansion of macro 'MACRO_ASSERT'
 #define MACRO_IF_THEN(a, b) MACRO_ASSERT((!(a))||(b))
                             ^~~~~~~~~~~~
config-assertions.h:27:1: note: in expansion of macro 'MACRO_IF_THEN'
 MACRO_IF_THEN(CC_ALG==SILO, ATOMIC_WORD==true);
 ^~~~~~~~~~~~~
config-assertions.h:31:42: error: 'USE_LOCKTABLE' was not declared in this scope
 MACRO_IF_THEN(LOG_ALGORITHM==LOG_PLOVER, USE_LOCKTABLE==false)
                                          ^
config-assertions.h:3:54: note: in definition of macro 'MACRO_ASSERT'
 #define MACRO_ASSERT(x) extern int __ma_dummy[((int)(x)!=0)-1];  // minor fix for clang, where "int a[0]" is permitted,
                                                      ^
config-assertions.h:31:1: note: in expansion of macro 'MACRO_IF_THEN'
 MACRO_IF_THEN(LOG_ALGORITHM==LOG_PLOVER, USE_LOCKTABLE==false)
 ^~~~~~~~~~~~~
Makefile:28: recipe for target 'config.o' failed
make: *** [config.o] Error 1
make: *** Waiting for unfinished jobs....
In file included from ./config.h:323:0,
                 from ./system/global.h:28,
                 from benchmarks/test.h:4,
                 from benchmarks/test_txn.cpp:1:
./config-assertions.h:12:15: error: 'USE_LOCKTABLE' was not declared in this scope
 MACRO_IF_THEN(USE_LOCKTABLE, LOG_ALGORITHM==LOG_TAURUS || LOG_ALGORITHM == LOG_NO || LOG_ALGORITHM == LOG_SERIAL || LOG_ALGORITHM == LOG_BATCH)
               ^
./config-assertions.h:3:54: note: in definition of macro 'MACRO_ASSERT'
 #define MACRO_ASSERT(x) extern int __ma_dummy[((int)(x)!=0)-1];  // minor fix for clang, where "int a[0]" is permitted,
                                                      ^
./config-assertions.h:12:1: note: in expansion of macro 'MACRO_IF_THEN'
 MACRO_IF_THEN(USE_LOCKTABLE, LOG_ALGORITHM==LOG_TAURUS || LOG_ALGORITHM == LOG_NO || LOG_ALGORITHM == LOG_SERIAL || LOG_ALGORITHM == LOG_BATCH)
 ^~~~~~~~~~~~~
./config-assertions.h:16:60: error: 'USE_LOCKTABLE' was not declared in this scope
 MACRO_IF_THEN(LOG_ALGORITHM==LOG_SERIAL && CC_ALG == SILO, USE_LOCKTABLE==false)
                                                            ^
./config-assertions.h:3:54: note: in definition of macro 'MACRO_ASSERT'
 #define MACRO_ASSERT(x) extern int __ma_dummy[((int)(x)!=0)-1];  // minor fix for clang, where "int a[0]" is permitted,
                                                      ^
./config-assertions.h:16:1: note: in expansion of macro 'MACRO_IF_THEN'
 MACRO_IF_THEN(LOG_ALGORITHM==LOG_SERIAL && CC_ALG == SILO, USE_LOCKTABLE==false)
 ^~~~~~~~~~~~~
./config-assertions.h:3:62: error: size of array '__ma_dummy' is negative
 #define MACRO_ASSERT(x) extern int __ma_dummy[((int)(x)!=0)-1];  // minor fix for clang, where "int a[0]" is permitted,
                                                              ^
./config-assertions.h:5:29: note: in expansion of macro 'MACRO_ASSERT'
 #define MACRO_IF_THEN(a, b) MACRO_ASSERT((!(a))||(b))
                             ^~~~~~~~~~~~
./config-assertions.h:29:1: note: in expansion of macro 'MACRO_IF_THEN'
 MACRO_IF_THEN(UPDATE_SIMD, LOG_ALGORITHM==LOG_TAURUS)
 ^~~~~~~~~~~~~
./config-assertions.h:3:62: error: conflicting declaration 'int __ma_dummy [1]'
 #define MACRO_ASSERT(x) extern int __ma_dummy[((int)(x)!=0)-1];  // minor fix for clang, where "int a[0]" is permitted,
                                                              ^
./config-assertions.h:5:29: note: in expansion of macro 'MACRO_ASSERT'
 #define MACRO_IF_THEN(a, b) MACRO_ASSERT((!(a))||(b))
                             ^~~~~~~~~~~~
./config-assertions.h:29:1: note: in expansion of macro 'MACRO_IF_THEN'
 MACRO_IF_THEN(UPDATE_SIMD, LOG_ALGORITHM==LOG_TAURUS)
 ^~~~~~~~~~~~~
./config-assertions.h:3:36: note: previous declaration as 'int __ma_dummy [0]'
 #define MACRO_ASSERT(x) extern int __ma_dummy[((int)(x)!=0)-1];  // minor fix for clang, where "int a[0]" is permitted,
                                    ^
./config-assertions.h:5:29: note: in expansion of macro 'MACRO_ASSERT'
 #define MACRO_IF_THEN(a, b) MACRO_ASSERT((!(a))||(b))
                             ^~~~~~~~~~~~
./config-assertions.h:27:1: note: in expansion of macro 'MACRO_IF_THEN'
 MACRO_IF_THEN(CC_ALG==SILO, ATOMIC_WORD==true);
 ^~~~~~~~~~~~~
./config-assertions.h:31:42: error: 'USE_LOCKTABLE' was not declared in this scope
 MACRO_IF_THEN(LOG_ALGORITHM==LOG_PLOVER, USE_LOCKTABLE==false)
                                          ^
./config-assertions.h:3:54: note: in definition of macro 'MACRO_ASSERT'
 #define MACRO_ASSERT(x) extern int __ma_dummy[((int)(x)!=0)-1];  // minor fix for clang, where "int a[0]" is permitted,
                                                      ^
./config-assertions.h:31:1: note: in expansion of macro 'MACRO_IF_THEN'
 MACRO_IF_THEN(LOG_ALGORITHM==LOG_PLOVER, USE_LOCKTABLE==false)
 ^~~~~~~~~~~~~
Makefile:28: recipe for target 'benchmarks/test_txn.o' failed
make: *** [benchmarks/test_txn.o] Error 1
